
ARG NODE_VERSION=21.5.0
FROM node:${NODE_VERSION}-slim as base

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

FROM base AS builder
RUN apt update -qq && \
    apt install --no-install-recommends -y build-essential node-gyp openssl pkg-config python-is-python3
WORKDIR /app

RUN pnpm install turbo --global
COPY . .
RUN turbo prune @dactylo/remix --docker

# Add lockfile and package.json's of isolated subworkspace
FROM base AS installer
# RUN apt-get install libc6-compat
RUN apt-get update
WORKDIR /app

# First install dependencies (as they change less often)
COPY .gitignore .gitignore
COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/pnpm-lock.yaml ./pnpm-lock.yaml
RUN pnpm install
# Copy patches
COPY patches patches/
# Build the project and its dependencies
COPY --from=builder /app/out/full/ .
COPY turbo.json turbo.json


# Generate Prisma Client
RUN pnpm turbo db:generate --filter=@dactylo/db
RUN pnpm turbo build --filter=@dactylo/remix...

# Final stage for app image
FROM base as runner
WORKDIR /app

# Set production environment
ENV NODE_ENV="production"
ENV LITEFS_DIR="/litefs/data"
ENV CACHE_DATABASE_FILENAME="cache.db"
ENV CACHE_DATABASE_PATH="/$LITEFS_DIR/$CACHE_DATABASE_FILENAME"

# prepare for litefs
COPY --from=flyio/litefs:0.5.8 /usr/local/bin/litefs /usr/local/bin/litefs
ADD /apps/remix/other/litefs.yml /etc/litefs.yml
RUN mkdir -p /data ${LITEFS_DIR}

COPY --from=installer /app .

# Start the server by default, this can be overwritten at runtime
EXPOSE 3000
CMD [ "pnpm", "run", "start" ]
