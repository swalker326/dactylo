
FROM node:lts-slim as base

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

# The web Dockerfile is copy-pasted into our main docs at /docs/handbook/deploying-with-docker.
# Make sure you update this Dockerfile, the Dockerfile in the web workspace and copy that over to Dockerfile in the docs.

FROM base AS builder
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apt update && apt install --no-install-recommends -y ffmpeg openssl
# Set working directory
WORKDIR /app
RUN pnpm install turbo --global
COPY . .
ENV DATABASE_URL=mysql://6vtt5w9zpkpyd0jipy01:pscale_pw_aaX9FGRBiXnPyJHwhpmorU1z0T5tEmuW5SEiVwMePI9@aws.connect.psdb.cloud/dactylo?sslaccept=strict
RUN turbo prune @dactylo/transcoder --docker

# Add lockfile and package.json's of isolated subworkspace
FROM base AS installer
# RUN apt-get install libc6-compat
RUN apt-get update
WORKDIR /app

# First install dependencies (as they change less often)
COPY .gitignore .gitignore
COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/pnpm-lock.yaml ./pnpm-lock.yaml
RUN pnpm install

# Build the project and its dependencies
COPY --from=builder /app/out/full/ .

COPY turbo.json turbo.json

# Uncomment and use build args to enable remote caching
# ARG TURBO_TEAM
# ENV TURBO_TEAM=$TURBO_TEAM

# ARG TURBO_TOKEN
# ENV TURBO_TOKEN=$TURBO_TOKEN

RUN pnpm turbo db:generate
RUN pnpm turbo build --filter=@dactylo/transcoder...

FROM base AS runner

RUN apt update && apt install --no-install-recommends -y ffmpeg openssl

WORKDIR /app
RUN pnpm install bun --global

ENV NODE_ENV="production"
# Don't run production as root
# RUN addgroup --system --gid 1001 prod
# RUN adduser --system --uid 1001 prod
# USER prod
COPY --from=installer /app .
CMD ["pnpm", "start", "--filter=@dactylo/transcoder"]
# CMD "pnpm ts-node --esm apps/transcoder/src/index.ts"